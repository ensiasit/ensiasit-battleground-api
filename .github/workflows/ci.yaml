name: CI

on:
  push:
    branches:
      - master

env:
  IMAGE_NAME: ensiasit-battleground-api

jobs:
  test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v2
      
    - name: Run a local mongodb instance
      run: docker container run --rm -d -p 27017:27017 mongo:bionic
      
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: Clean and install packages
      run: npm ci
      
    - name: Run unit tests
      run: npm test

  build:
    needs: test

    runs-on: ubuntu-latest
    
    if: github.event_name == 'push'
    
    strategy:
      matrix:
        node-version: [12.x]
    
    steps:
      - uses: actions/checkout@v2
      
      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME

      - name: Log into github docker registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

      - name: Push image to github docker registry
        run: |
          IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
          IMAGE_VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_VERSION=$IMAGE_VERSION
          
          docker tag $IMAGE_NAME $IMAGE_ID:$IMAGE_VERSION
          docker push $IMAGE_ID:$IMAGE_VERSION
          
      - name: Log into docker hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ensiasitclub --password-stdin
        
      - name: Push image to docker hub
        run: |
          IMAGE_ID=ensiasitclub/$IMAGE_NAME
          IMAGE_VERSION=latest
          
          echo IMAGE_ID=$IMAGE_ID
          echo IMAGE_VERSION=$IMAGE_VERSION
          
          docker tag $IMAGE_NAME $IMAGE_ID:$IMAGE_VERSION
          docker push $IMAGE_ID:$IMAGE_VERSION

